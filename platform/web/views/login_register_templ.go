// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

var try_script_login_register = templ.NewOnceHandle()

func Login_Register(username string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"wrapper\" id=\"login_register_page\"><div class=\"form-box\"><div class=\"login-container\" id=\"login\"><div class=\"top\"><span>Belum punya akun? <a href=\"#\" onclick=\"register()\">Daftar</a></span><header>Masuk</header></div><div class=\"input-box\"><input type=\"text\" class=\"input-field\" placeholder=\"Username atau Email\" id=\"login_username_email_input\"> <i class=\"bx bx-user\"></i></div><div class=\"input-box\"><input type=\"password\" class=\"input-field\" placeholder=\"Password\" id=\"login_password_input\"> <i class=\"bx bx-lock-alt\"></i></div><div class=\"input-box\"><input type=\"submit\" class=\"submit\" value=\"Masuk\"></div><div class=\"two-col\"><div class=\"one\"><input type=\"checkbox\" id=\"login-check\"> <label for=\"login-check\">Ingatkan Saya</label></div><div class=\"two\"><label><a href=\"#\">Lupa Password?</a></label></div></div></div><div class=\"register-container\" id=\"register\"><div class=\"top\"><span>Sudah punya akun? <a href=\"#\" onclick=\"login()\">Masuk</a></span><header>Daftar</header></div><div class=\"two-forms\"><div class=\"input-box\"><input type=\"text\" class=\"input-field\" placeholder=\"Nama Depan\" id=\"register_firstname_input\"> <i class=\"bx bx-user\"></i></div><div class=\"input-box\"><input type=\"text\" class=\"input-field\" placeholder=\"Nama Belakang\" id=\"register_lastname_input\"> <i class=\"bx bx-user\"></i></div></div><div class=\"input-box\"><input type=\"text\" class=\"input-field\" placeholder=\"Email\" id=\"register_email_input\"> <i class=\"bx bx-envelope\"></i></div><div class=\"input-box\"><input type=\"password\" class=\"input-field\" placeholder=\"Password\" id=\"register_password_input\"> <i class=\"bx bx-lock-alt\"></i></div><div class=\"input-box\"><input type=\"submit\" class=\"submit\" value=\"Daftar\" onclick=\"\"></div><div class=\"two-col\"><div class=\"one\"><input type=\"checkbox\" id=\"register-check\"> <label for=\"register-check\">Ingatkan Saya</label></div><div class=\"two\"><label><a href=\"#\">Syarat & Ketentuan</a></label></div></div></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script>\r\n        var a = document.getElementById(\"loginBtn\");\r\n        var b = document.getElementById(\"registerBtn\");\r\n        var x = document.getElementById(\"login\");\r\n        var y = document.getElementById(\"register\");\r\n\r\n        let register_submit = document.querySelector('.register-container .submit')\r\n        let login_submit = document.querySelector('.login-container .submit')\r\n        \r\n        \r\n        function createToast(type, icon, title, text){\r\n            let newToast = document.createElement('div');\r\n            newToast.innerHTML = `\r\n                <div class=\"toast ${type}\">\r\n                    <i class=\"${icon}\"></i>\r\n                    <div class=\"content\">\r\n                        <div class=\"title\">${title}</div>\r\n                        <span>${text}</span>\r\n                    </div>\r\n                    <i class=\"fa-solid fa-xmark\" onclick=\"(this.parentElement).remove()\"></i>\r\n                </div>`;\r\n            notifications.appendChild(newToast);\r\n            newToast.timeOut = setTimeout(\r\n                ()=>newToast.remove(), 5000\r\n            )\r\n        }\r\n\r\n        function login() {\r\n            x.style.left = \"4px\";\r\n            y.style.right = \"-520px\";\r\n            // a.className += \" white-btn\";\r\n            // b.className = \"btn\";\r\n            x.style.opacity = 1;\r\n            y.style.opacity = 0;\r\n        }\r\n\r\n        function register() {\r\n            x.style.left = \"-510px\";\r\n            y.style.right = \"5px\";\r\n            // a.className = \"btn\";\r\n            // b.className += \" white-btn\";\r\n            x.style.opacity = 0;\r\n            y.style.opacity = 1;\r\n        }\r\n\r\n        login_submit.addEventListener('click', () => {\r\n            // {\r\n            //     \"email\": \"me@me.com\",\r\n            //     \"password\": \"asd\"\r\n            // }\r\n            let username_login = document.querySelector('#login_username_email_input')\r\n            let password_login = document.querySelector('#login_password_input')\r\n            // let start_login_json = `{ `;\r\n            // let body_login_json = ` \"email\": \"${username_login.value}\", \"password\": \"${password_login.value}\"`;\r\n            // let end_login_json = ` }`;\r\n            // let login_json = start_login_json + body_login_json + end_login_json\r\n            let products_page = document.getElementById(\"products_page\")\r\n    \r\n            // console.log(login_json)\r\n            // alert('clicked login')\r\n            try {\r\n                fetch(\"/api/v1/login\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify({email: `${username_login.value}`, password: `${password_login.value}`}),\r\n                credentials: \"include\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json; charset=UTF-8\"\r\n                }\r\n            }).then(response => response.json())\r\n            .then((data) => {\r\n                // console.log(body_login_json)\r\n                console.log(data)\r\n                // console.log(response.headers.getSetCookie())\r\n                if (data.error) {\r\n                    // alert(data.error)\r\n                    let type = 'error';\r\n                    let icon = 'fa-solid fa-circle-exclamation';\r\n                    let title = 'Masuk Akun Gagal';\r\n                    let text = 'Masukkan username/email dan password dengan benar, beralih ke halaman utama.';\r\n                    createToast(type, icon, title, text);\r\n\r\n                    setTimeout(() => window.location = 'http://localhost:8080', 5000)\r\n                    \r\n                    \r\n                } \r\n                \r\n                console.log(data.access_token)\r\n                let type = 'success';\r\n                let icon = 'fa-solid fa-circle-check';\r\n                let title = 'Masuk Akun Berhasil';\r\n                let text = 'Kamu berhasil login juga dapat berbelanja di menu produk untuk checkout sekaligus bayar.';\r\n                createToast(type, icon, title, text);\r\n                }\r\n            )\r\n\r\n            } catch(error) {\r\n                console.log(error)\r\n            }\r\n            \r\n            \r\n            // console.log(username_login.value)\r\n            // console.log(password_login.value)\r\n    \r\n    \r\n        })\r\n\r\n        register_submit.addEventListener('click', () => {\r\n            // {\r\n            //     \"email\": \"me@me.com\",\r\n            //     \"password\": \"asd\",\r\n            //     \"firstName\": \"tiago\",\r\n            //     \"lastName\": \"user\"\r\n            // }\r\n            let firstName_register = document.querySelector('#register_firstname_input')\r\n            let lastName_register = document.querySelector('#register_lastname_input')\r\n            let email_register = document.querySelector('#register_email_input')\r\n            let password_register = document.querySelector('#register_password_input')\r\n            // let start_register_json = `{ `;\r\n            // let body_register_json = `\"email\": \"${email_register.value}\", \"password\": \"${password_register.value}\", \"firstName\": \"${firstName_register.value}\", \"lastName\": \"${lastName_register.value}\"`;\r\n            // let end_register_json = ` }`;\r\n            // let register_json = start_register_json + body_register_json + end_register_json\r\n            // console.log(register_json)\r\n            // alert('clicked register')\r\n\r\n            fetch(\"/api/v1/register\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify({email: `${email_register.value}`, password: `${password_register.value}`, firstname: `${firstName_register.value}`, lastname: `${lastName_register.value}`}),\r\n                headers: {\r\n                \"Content-Type\": \"application/json; charset=UTF-8\"\r\n                }\r\n            }).then(response => response.json())\r\n            .then(data => {\r\n                console.log(body_register_json)\r\n                console.log(data)\r\n                if (data.verify_url) {\r\n                    // alert('success register')\r\n                    let type = 'success';\r\n                    let icon = 'fa-solid fa-circle-check';\r\n                    let title = 'Daftar Akun Berhasil';\r\n                    let text = `Kamu telah berhasil mendaftarkan akun , mohon verifikasi dengan mengakses link berikut (dalam 5 detik), agar akun dapat digunakan : ${data.verify_url}`;\r\n                    createToast(type, icon, title, text);\r\n                    // setTimeout(() => window.location = `${data.verify_url}`, 5000)\r\n                    setTimeout(() => window.open(`${data.verify_url}`), 5000)\r\n                    // window.open(`${data.verify_url}`)\r\n                }\r\n                \r\n                if (data != null && data.error) {\r\n                    // alert(data.error)\r\n                    let type = 'error';\r\n                    let icon = 'fa-solid fa-circle-exclamation';\r\n                    let title = 'Daftar Akun Gagal';\r\n                    let text = 'Kamu gagal melakukan daftar akun lalu akan beralih ke halaman utama.';\r\n                    createToast(type, icon, title, text);\r\n                    setTimeout(() => window.location = 'http://localhost:8080', 5000)\r\n                } \r\n                \r\n            })\r\n            \r\n        })\r\n    </script>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return templ_7745c5c3_Err
			})
			templ_7745c5c3_Err = try_script_login_register.Once().Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = Page(true, username).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
